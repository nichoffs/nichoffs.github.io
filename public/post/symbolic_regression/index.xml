<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Symbolic Regression on Nic Hoffs Blog</title>
    <link>http://localhost:1313/post/symbolic_regression/</link>
    <description>Recent content in Symbolic Regression on Nic Hoffs Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Jun 2024 21:25:23 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/post/symbolic_regression/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Symbolic Distillation on XOR Neural Network</title>
      <link>http://localhost:1313/post/symbolic_regression/symbolic_distillation/</link>
      <pubDate>Sun, 09 Jun 2024 21:25:23 +0200</pubDate>
      <guid>http://localhost:1313/post/symbolic_regression/symbolic_distillation/</guid>
      <description>What is symbolic distillation? Symbolic distillation is a technique pioneered by Miles Cranmer to improve interpretability of neural networks using symbolic regression. The basic premise is to approximate various components of a neural network by applying symbolic regression to different parts. These parts can then be substituted for the original network.&#xA;We&amp;rsquo;ll try this</description>
    </item>
    <item>
      <title>Learning PySr for Symbolic Regression</title>
      <link>http://localhost:1313/post/symbolic_regression/learning_pysr/</link>
      <pubDate>Sun, 09 Jun 2024 13:17:27 +0200</pubDate>
      <guid>http://localhost:1313/post/symbolic_regression/learning_pysr/</guid>
      <description>What is PySr? A library for symbolic regression made by one of my favorite researchers, Miles Cranmer. The backend genetic algorithm(optimization method for finding symbolic expression) runs on Julia, so it&amp;rsquo;s really fast. It&amp;rsquo;s also extremely flexible.&#xA;Installing and Running PySr I&amp;rsquo;m going to use a Jupyter notebook with a virtualenv environment for all my PySr experiments.&#xA;virtualenv venv source venv/bin/activate pip install numpy pysr Vector-&amp;gt;Scalar Fit The first import of pysr will take much longer than the next as Julia dependencies are getting set up.</description>
    </item>
  </channel>
</rss>
